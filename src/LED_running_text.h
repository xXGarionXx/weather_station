#include <Arduino.h>
#include <LedControl.h>
#include <array>
#include <stdint.h>
#include <string.h>

using buffer    = std::array<byte,64>;
using ibuffer   = std::array<byte,56>;

class Led_running_text : LedControl
{
    public:
        // variables --------------------------------------------------------------------------

        // Constructor ------------------------------------------------------------------------

        Led_running_text(int data = 12, int clk = 14, int cs = 27, int dp_anzahl = 8);

        // function ---------------------------------------------------------------------------

        void Ledsetup();
        void Textloop(String text);
        void Stand_text(String text);
        void Stand_text_loop(String text, String text2);
        
    private:

    //  variables Textloop --------------------------------------------------------------------

    int counter1{};
    int counter2{};
    buffer buffer1 PROGMEM{};
    buffer buffer2 PROGMEM{};
    
    ibuffer ibuffer1 PROGMEM{};
    ibuffer ibuffer2 PROGMEM{};
    


    const std::string fontlist {" !#$%&()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz"};
    std::array <std::array <uint8_t PROGMEM, 8>, 90> font{{
        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},  // 0020 ('space')
        {{0x30, 0x78, 0x78, 0x30, 0x30, 0x00, 0x30, 0x00}},  // 0021 ('!')
        {{0x6c, 0x6c, 0xfe, 0x6c, 0xfe, 0x6c, 0x6c, 0x00}},  // 0023 ('#')
        {{0x30, 0x7c, 0xc0, 0x78, 0x0c, 0xf8, 0x30, 0x00}},  // 0024 ('$')
        {{0x00, 0xc6, 0xcc, 0x18, 0x30, 0x66, 0xc6, 0x00}},  // 0025 ('%')
        {{0x38, 0x6c, 0x38, 0x76, 0xdc, 0xcc, 0x76, 0x00}},  // 0026 ('&')
        {{0x18, 0x30, 0x60, 0x60, 0x60, 0x30, 0x18, 0x00}},  // 0028 ('(')
        {{0x60, 0x30, 0x18, 0x18, 0x18, 0x30, 0x60, 0x00}},  // 0029 (')')
        {{0x00, 0x66, 0x3c, 0xff, 0x3c, 0x66, 0x00, 0x00}},  // 002a ('*')
        {{0x00, 0x30, 0x30, 0xfc, 0x30, 0x30, 0x00, 0x00}},  // 002b ('+')
        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x60}},  // 002c (',')
        {{0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00}},  // 002d ('-')
        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00}},  // 002e ('.')
        {{0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x80, 0x00}},  // 002f ('/')
        {{0x7c, 0xc6, 0xce, 0xde, 0xf6, 0xe6, 0x7c, 0x00}},  // 0030 ('0')
        {{0x30, 0x70, 0x30, 0x30, 0x30, 0x30, 0xfc, 0x00}},  // 0031 ('1')
        {{0x78, 0xcc, 0x0c, 0x38, 0x60, 0xc4, 0xfc, 0x00}},  // 0032 ('2')
        {{0x78, 0xcc, 0x0c, 0x38, 0x0c, 0xcc, 0x78, 0x00}},  // 0033 ('3')
        {{0x1c, 0x3c, 0x6c, 0xcc, 0xfe, 0x0c, 0x1e, 0x00}},  // 0034 ('4')
        {{0xfc, 0xc0, 0xf8, 0x0c, 0x0c, 0xcc, 0x78, 0x00}},  // 0035 ('5')
        {{0x38, 0x60, 0xc0, 0xf8, 0xcc, 0xcc, 0x78, 0x00}},  // 0036 ('6')
        {{0xfc, 0xcc, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x00}},  // 0037 ('7')
        {{0x78, 0xcc, 0xcc, 0x78, 0xcc, 0xcc, 0x78, 0x00}},  // 0038 ('8')
        {{0x78, 0xcc, 0xcc, 0x7c, 0x0c, 0x18, 0x70, 0x00}},  // 0039 ('9')
        {{0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00}},  // 003a (':')
        {{0x00, 0x30, 0x30, 0x00, 0x30, 0x30, 0x60, 0x00}},  // 003b (';')
        {{0x18, 0x30, 0x60, 0xc0, 0x60, 0x30, 0x18, 0x00}},  // 003c ('<')
        {{0x00, 0x00, 0xfc, 0x00, 0x00, 0xfc, 0x00, 0x00}},  // 003d ('=')
        {{0x60, 0x30, 0x18, 0x0c, 0x18, 0x30, 0x60, 0x00}},  // 003e ('>')
        {{0x78, 0xcc, 0x0c, 0x18, 0x30, 0x00, 0x30, 0x00}},  // 003f ('?')
        {{0x7c, 0xc6, 0xde, 0xde, 0xde, 0xc0, 0x78, 0x00}},  // 0040 ('@')
        {{0x30, 0x78, 0xcc, 0xcc, 0xfc, 0xcc, 0xcc, 0x00}},  // 0041 (A)
        {{0xfc, 0x66, 0x66, 0x7c, 0x66, 0x66, 0xfc, 0x00}},  // 0042 (B)
        {{0x3c, 0x66, 0xc0, 0xc0, 0xc0, 0x66, 0x3c, 0x00}},  // 0043 (C)
        {{0xf8, 0x6c, 0x66, 0x66, 0x66, 0x6c, 0xf8, 0x00}},  // 0044 (D)
        {{0xfe, 0x62, 0x68, 0x78, 0x68, 0x62, 0xfe, 0x00}},  // 0045 (E)
        {{0xfe, 0x62, 0x68, 0x78, 0x68, 0x60, 0xf0, 0x00}},  // 0046 (F)
        {{0x3c, 0x66, 0xc0, 0xc0, 0xce, 0x66, 0x3e, 0x00}},  // 0047 (G)
        {{0xcc, 0xcc, 0xcc, 0xfc, 0xcc, 0xcc, 0xcc, 0x00}},  // 0048 (H)
        {{0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00}},  // 0049 (I)
        {{0x1e, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0x78, 0x00}},  // 004a (J)
        {{0xe6, 0x66, 0x6c, 0x78, 0x6c, 0x66, 0xe6, 0x00}},  // 004b (K)
        {{0xf0, 0x60, 0x60, 0x60, 0x62, 0x66, 0xfe, 0x00}},  // 004c (L)
        {{0xc6, 0xee, 0xfe, 0xfe, 0xd6, 0xc6, 0xc6, 0x00}},  // 004d (M)
        {{0xc6, 0xe6, 0xf6, 0xde, 0xce, 0xc6, 0xc6, 0x00}},  // 004e (N)
        {{0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00}},  // 004f (O)
        {{0xfc, 0x66, 0x66, 0x7c, 0x60, 0x60, 0xf0, 0x00}},  // 0050 (P)
        {{0x78, 0xcc, 0xcc, 0xcc, 0xdc, 0x78, 0x1c, 0x00}},  // 0051 (Q)
        {{0xfc, 0x66, 0x66, 0x7c, 0x6c, 0x66, 0xe6, 0x00}},  // 0052 (R)
        {{0x78, 0xcc, 0xe0, 0x70, 0x1c, 0xcc, 0x78, 0x00}},  // 0053 (S)
        {{0xfc, 0xb4, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00}},  // 0054 (T)
        {{0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xfc, 0x00}},  // 0055 (U)
        {{0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x78, 0x30, 0x00}},  // 0056 (V)
        {{0xc6, 0xc6, 0xc6, 0xd6, 0xfe, 0xee, 0xc6, 0x00}},  // 0057 (W)
        {{0xc6, 0xc6, 0x6c, 0x38, 0x38, 0x6c, 0xc6, 0x00}},  // 0058 (X)
        {{0xcc, 0xcc, 0xcc, 0x78, 0x30, 0x30, 0x78, 0x00}},  // 0059 (Y)
        {{0xfe, 0xc6, 0x8c, 0x18, 0x32, 0x66, 0xfe, 0x00}},  // 005a (Z)
        {{0x78, 0x60, 0x60, 0x60, 0x60, 0x60, 0x78, 0x00}},  // 005b ('[')
        {{0xc0, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x02, 0x00}},  // 005c ('\')
        {{0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x78, 0x00}},  // 005d (']')
        {{0x10, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00, 0x00}},  // 005e ('^')
        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff}},  // 005f ('_')
        {{0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00}},  // 0060 ('`')
        {{0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0x76, 0x00}},  // 0061 (a)
        {{0xe0, 0x60, 0x60, 0x7c, 0x66, 0x66, 0xdc, 0x00}},  // 0062 (b)
        {{0x00, 0x00, 0x78, 0xcc, 0xc0, 0xcc, 0x78, 0x00}},  // 0063 (c)
        {{0x1c, 0x0c, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00}},  // 0064 (d)
        {{0x00, 0x00, 0x78, 0xcc, 0xfc, 0xc0, 0x78, 0x00}},  // 0065 (e)
        {{0x38, 0x6c, 0x60, 0xf0, 0x60, 0x60, 0xf0, 0x00}},  // 0066 (f)
        {{0x00, 0x00, 0x76, 0xcc, 0xcc, 0x7c, 0x0c, 0xf8}},  // 0067 (g)
        {{0xe0, 0x60, 0x6c, 0x76, 0x66, 0x66, 0xe6, 0x00}},  // 0068 (h)
        {{0x30, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00}},  // 0069 (i)
        {{0x0c, 0x00, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0x78}},  // 006a (j)
        {{0xe0, 0x60, 0x66, 0x6c, 0x78, 0x6c, 0xe6, 0x00}},  // 006b (k)
        {{0x70, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00}},  // 006c (l)
        {{0x00, 0x00, 0xcc, 0xfe, 0xfe, 0xd6, 0xc6, 0x00}},  // 006d (m)
        {{0x00, 0x00, 0xf8, 0xcc, 0xcc, 0xcc, 0xcc, 0x00}},  // 006e (n)
        {{0x00, 0x00, 0x78, 0xcc, 0xcc, 0xcc, 0x78, 0x00}},  // 006f (o)
        {{0x00, 0x00, 0xdc, 0x66, 0x66, 0x7c, 0x60, 0xf0}},  // 0070 (p)
        {{0x00, 0x00, 0x76, 0xcc, 0xcc, 0x7c, 0x0c, 0x1e}},  // 0071 (q)
        {{0x00, 0x00, 0xdc, 0x76, 0x66, 0x60, 0xf0, 0x00}},  // 0072 (r)
        {{0x00, 0x00, 0x7c, 0xc0, 0x78, 0x0c, 0xf8, 0x00}},  // 0073 (s)
        {{0x10, 0x30, 0x7c, 0x30, 0x30, 0x34, 0x18, 0x00}},  // 0074 (t)
        {{0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00}},  // 0075 (u)
        {{0x00, 0x00, 0xcc, 0xcc, 0xcc, 0x78, 0x30, 0x00}},  // 0076 (v)
        {{0x00, 0x00, 0xc6, 0xd6, 0xfe, 0xfe, 0x6c, 0x00}},  // 0077 (w)
        {{0x00, 0x00, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0x00}},  // 0078 (x)
        {{0x00, 0x00, 0xcc, 0xcc, 0xcc, 0x7c, 0x0c, 0xf8}},  // 0079 (y)
        {{0x00, 0x00, 0xfc, 0x98, 0x30, 0x64, 0xfc, 0x00}},  // 007a (z)
    }};

    // variables Stand_text -------------------------------------------------------------------

    int comparsion{8};
    buffer buffer3 PROGMEM{};
    ibuffer ibuffer3 PROGMEM{};

    // variables ScreenOutput -----------------------------------------------------------------

    int display{0};
    std::array<int, 16> zbuffer{};
    std::array<int, 8> displaybuffer{{0,8,16,24,32,40,48,56}};
    std::array<unsigned int, 16> outputbuffer{};

    // function -------------------------------------------------------------------------------

    void ScreenOutput(buffer &buffer1, buffer &buffer2);
    void ScreenOutput2(buffer &buffer1);
};